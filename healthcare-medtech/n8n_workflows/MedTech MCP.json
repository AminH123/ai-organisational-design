{
  "name": "MedTech MCP",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "record_id",
              "type": "number"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        64,
        0
      ],
      "id": "40da002b-0006-4477-99fe-f56046c92361",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "Patient Record Data",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "keyValue": "={{ $json.record_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        224,
        0
      ],
      "id": "78f67f59-60c4-41d2-85c6-f83b88e4e62f",
      "name": "Patient Record",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "grw4lm80dLamWktA",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "Dentist Notes",
        "limit": 15,
        "filters": {
          "conditions": [
            {
              "keyName": "patient_id",
              "condition": "eq",
              "keyValue": "={{ $('Patient Record').item.json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        704,
        -16
      ],
      "id": "2a74dd29-ff2b-47af-b0d6-35d314d2b2bd",
      "name": "Dentist Notes",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "grw4lm80dLamWktA",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "Appointment History",
        "limit": 15,
        "filters": {
          "conditions": [
            {
              "keyName": "patient_id",
              "condition": "eq",
              "keyValue": "={{ $json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        560,
        -16
      ],
      "id": "cb0cd9f1-fb95-4e6c-b5e5-d9c5d624254a",
      "name": "Appointment History",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "grw4lm80dLamWktA",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-oss:120b",
        "options": {
          "temperature": 0.6,
          "numCtx": 8192
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        1744,
        192
      ],
      "id": "058d7f47-e8b7-4811-8035-9b87b599fdd2",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "P7FvD3S1Np8fS6QE",
          "name": "NGROK OLLAMA HOST"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return {\n  \"Dentist Notes\": $(\"Dentist Notes\").all(),\n  \"Appointment History\": $(\"Appointment History\").all(),\n  \"Patient Record\": $(\"Patient Record\").all(),\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        864,
        -16
      ],
      "id": "1cc1ef56-2aa3-43d7-9b39-6fc20a502dff",
      "name": "Combine to Structured"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nconst stringifiedItems = JSON.stringify(items.map((item) => item.json));\nreturn { result: stringifiedItems };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1008,
        -16
      ],
      "id": "748cbae4-53d8-4dd4-91fb-6526e1a60133",
      "name": "Stringify"
    },
    {
      "parameters": {
        "type": "SHA256",
        "value": "={{ $json.result }}"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        1136,
        -16
      ],
      "id": "0cd2817f-eeaf-45f0-91fc-ff8291770c64",
      "name": "Hashing"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b006841d-31ce-4341-9e7c-a4e7f02faa08",
              "leftValue": "={{ $items(\"Patient Record\").length !== 0 }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        384,
        0
      ],
      "id": "8e17318c-d148-4621-a230-c8e026630562",
      "name": "Check if Record Exists"
    },
    {
      "parameters": {
        "errorMessage": "The patient record does not exist with id:"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        560,
        144
      ],
      "id": "9acd1a8c-31c4-4da9-9373-921cacff037b",
      "name": "Record does not exist!"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "Summaries",
        "filters": {
          "conditions": [
            {
              "keyName": "data_hash",
              "keyValue": "={{ $json.data }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1424,
        -16
      ],
      "id": "c805edc7-5dd3-4dae-9bf8-59251a47fd66",
      "name": "Summaries",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "grw4lm80dLamWktA",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b006841d-31ce-4341-9e7c-a4e7f02faa08",
              "leftValue": "={{ $items(\"Summaries\")[0].json.isEmpty() }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1568,
        -16
      ],
      "id": "9b0b2b3c-41bb-4755-8b46-c851868f1775",
      "name": "Check if Summary Already Made"
    },
    {
      "parameters": {
        "tableId": "Summaries",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "data_hash",
              "fieldValue": "={{ $('Hashing').item.json.data }}"
            },
            {
              "fieldId": "record_id",
              "fieldValue": "={{ $('Combine to Structured').item.json['Dentist Notes'][0].json.id }}"
            },
            {
              "fieldId": "summary",
              "fieldValue": "={{ $json.output.summary }}"
            },
            {
              "fieldId": "version",
              "fieldValue": "={{ $('Summary Versioning').item.json['Summaries Version'] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2032,
        48
      ],
      "id": "355e4914-bcfd-433a-b07e-b57c7314b550",
      "name": "Store Summary Output",
      "credentials": {
        "supabaseApi": {
          "id": "grw4lm80dLamWktA",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6b01db05-8bdc-4e62-bfca-ec3364564292",
              "name": "Summaries Version",
              "value": 1,
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1280,
        -16
      ],
      "id": "b046a1ac-ed35-4a65-907a-9b7add5244df",
      "name": "Summary Versioning",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f99b61f6-ff92-444c-af4e-a6b358d7366c",
              "name": "summary",
              "value": "={{ $json.summary }}",
              "type": "string"
            },
            {
              "id": "4bf2e483-b5a4-481c-9cb1-c7670f664a50",
              "name": "record_id",
              "value": "={{ $json.record_id }}",
              "type": "number"
            },
            {
              "id": "17cc05da-bb4b-43da-bf31-d4ee7cc796cd",
              "name": "hash",
              "value": "={{ $json.data_hash }}",
              "type": "string"
            },
            {
              "id": "e8c18774-183d-4d31-b856-d141fbedb72a",
              "name": "creation_date",
              "value": "={{ $json.created_at }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1744,
        -96
      ],
      "id": "334422df-e788-435e-99eb-578e6f86cea0",
      "name": "Set Output 1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f99b61f6-ff92-444c-af4e-a6b358d7366c",
              "name": "summary",
              "value": "={{ $json.summary }}",
              "type": "string"
            },
            {
              "id": "4bf2e483-b5a4-481c-9cb1-c7670f664a50",
              "name": "record_id",
              "value": "={{ $json.record_id }}",
              "type": "number"
            },
            {
              "id": "17cc05da-bb4b-43da-bf31-d4ee7cc796cd",
              "name": "hash",
              "value": "={{ $json.data_hash }}",
              "type": "string"
            },
            {
              "id": "e8c18774-183d-4d31-b856-d141fbedb72a",
              "name": "creation_date",
              "value": "={{ $json.created_at }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2192,
        48
      ],
      "id": "30f3e984-e275-46bd-b785-24204cfc5efa",
      "name": "Set Output "
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Can you summarize the following data into a summary? Separate each appointment by staff, each dentist note by date, and general information about the patient.\n{{ $('Stringify').item.json.result }}",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1744,
        48
      ],
      "id": "3b028faa-6d58-48e5-951c-7caa2ef49301",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"summary\": {\n\t\t\t\"type\": \"string\"\n\t\t}\n\t}\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1888,
        192
      ],
      "id": "993f9a19-3e98-4c63-b36b-1cfc71a36d12",
      "name": "Structured Output Parser"
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "record_id": 1
        }
      }
    ]
  },
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Patient Record",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Patient Record": {
      "main": [
        [
          {
            "node": "Check if Record Exists",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Dentist Notes": {
      "main": [
        [
          {
            "node": "Combine to Structured",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Appointment History": {
      "main": [
        [
          {
            "node": "Dentist Notes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Combine to Structured": {
      "main": [
        [
          {
            "node": "Stringify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stringify": {
      "main": [
        [
          {
            "node": "Hashing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Record Exists": {
      "main": [
        [
          {
            "node": "Appointment History",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Record does not exist!",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Summary Already Made": {
      "main": [
        [
          {
            "node": "Set Output 1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summary Versioning": {
      "main": [
        [
          {
            "node": "Summaries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Hashing": {
      "main": [
        [
          {
            "node": "Summary Versioning",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summaries": {
      "main": [
        [
          {
            "node": "Check if Summary Already Made",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Store Summary Output": {
      "main": [
        [
          {
            "node": "Set Output ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Store Summary Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "774e441a-f93a-437b-92c4-09925e206551",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d4b45c4bfc930a30cf723717401a9f283a24972514643d562a20d54a9eb11ac8"
  },
  "id": "ZJyJH6zf2wrmTFbv",
  "tags": []
}